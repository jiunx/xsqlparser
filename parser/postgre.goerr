package parser

import (
	"context"
	perseverant "github.com/2212442929/sqlparser/dialect/postgre/gen"
	"github.com/2212442929/sqlparser/listener"
	"github.com/2212442929/sqlparser/model"
	"github.com/antlr/antlr4/runtime/Go/antlr"
)

var (
	postgreListener = listener.PostgreInstance
)

type postgreParser struct{}

//Parse parses the sql and returns a Statement .
func (p *postgreParser) Parse(ctx context.Context, sql string) (stmt *model.Statement, err error) {
	is := antlr.NewInputStream(sql)
	lexer := perseverant.NewPostgreSQLStatementLexer(is)
	stream := antlr.NewCommonTokenStream(lexer, antlr.TokenDefaultChannel)
	sqlStatementParser := perseverant.NewPostgreSQLStatementParser(stream)
	antlr.ParseTreeWalkerDefault.Walk(postgreListener, sqlStatementParser.Execute())
	postgreListener.Stmt.Sql = sql
	return &postgreListener.Stmt, nil
}
